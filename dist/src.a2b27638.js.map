{"version":3,"sources":["src/sprite.js","src/cannon.js","src/bunker.js","src/bullet.js","src/alien.js","src/input-handler.js","src/sounds.js","src/game.js","src/index.js"],"names":["Sprite","img","x","y","w","h","Cannon","sprite","_sprite","ctx","time","drawImage","Bunker","mask","Array","i","j","init","imgSize","indF","indS","myImage","getImageData","data","Math","floor","putImageData","destroyPoint","firtsCoord","secondCoord","isTop","isBot","isLeft","isRight","Bullet","vx","vy","color","fillStyle","fillRect","Alien","alienType","spriteA","spriteB","isAlive","_spriteA","_spriteB","blinkTime","isInjured","sp","ceil","InputHandler","down","pressed","document","addEventListener","e","keyCode","code","Sounds","cannonShoot","getElementById","background","alienDead","cannonDead","gameOver","play","loop","pause","currentTime","replayBackground","bind","player","canvasForReplay","gs","seconds","aShoot","started","level","score","lives","goToNextLevel","settings","lineW","headerSize","footerSize","game","nextLevelWait","alien","alienTypes","inOneLine","shootTime","size","shootProbability","BulletMult","injDist","killDist","collisionMaxStepPx","aliveAfterKilling","shootInterval","makeNotInjuredTime","blockMovingVx","blockMovingVy","blockMovingTime","blockMovChangeDirProbability","cannon","step","baseBulletSpeed","bulletSpeedProbabilityRange","bunker","amount","distanceFromCannon","safeArea","l","t","r","b","assets","soundPlayer","sprites","aliens","objs","bullets","bunkers","inputHandler","preload","onPreloadComplete","Image","src","assetPath","canvas","setAliens","height","push","timer","setTimeout","timer_tictoc","setTimerMoving","playBackground","isAnyAliveAliens","moveAliens","aliensStartShoot","update","potentialX","isDown","isPressed","bulletX","bulletY","bulletVy","random","playCannonShoot","forEach","checkBulletIntersection","checkAreBulletsInSafeArea","length","touch","founded","bottom","abs","top","a","right","left","lvl","len","alienX","alienY","stopGame","startNextLevel","splice","checkCannonOnLine","checkAlienOnLine","ax","ay","bx","by","indBullet","vxFull","vyFull","steps","max","xStep","yStep","stepCounter","killed","toPointA","c","xDist","yDist","injureAlien","killAlien","hasPoint","index","makeNotInjured","makeAlienIsNotAlive","playAlienDead","killCannon","playGameOver","playCannonDead","showSafeAreaZone","beginPath","lineWidth","strokeStyle","strokeRect","closePath","drawBackground","halfLineW","font","textAlign","textBaseline","fillText","drawGameOver","sqrWPart","sqrHPart","clearRect","drawNextLevel","drawStartGame","draw","getContext","width","maxI","maxJ","timeout","alienMakeShoot","k","ind","bulletVx","window","innerHeight","tickLength","lastTick","lastRender","stopCycle","run","tFrame","requestAnimationFrame","nextTick","numTicks","timeSinceTick","cancelAnimationFrame","performance","now"],"mappings":";;AQAA;;AAOA,IAAMkI,MAAM,GAAG5E,QAAQ,CAACO,cAAT,CAAwB,MAAxB,CAAf;AACAqE,MAAM,CAACyF,KAAP,GAAe,GAAf;AACAzF,MAAM,CAACE,MAAP,GAAgB+F,MAAM,CAACC,WAAvB;AAEA,IAAMC,UAAU,GAAG,EAAnB,EAAuB;;AACvB,IAAIC,ARZiBtO,QQYrB,CRXE,gBAAYC,GAAZ,EAAiBC,CAAjB,EAAoBC,CAApB,EAAuBC,CAAvB,EAA0BC,CAA1B,EAA6B;AOD/B,ACaA,ARZ+B,IQY3BkO,UAAJ;AACA,IAAIC,SAAJ;ADbA,APCI,OAAKvO,GAAL,GAAWA,GAAX;AQcJ,ARbG,IGHkBiC,ADAAtB,ADAAN,AIAA6C,ACAAQ,GNGbzD,CAAL,CQaMuO,ERbGvO,CQaZ,ARbG,CQaUwO,MAAb,EACA;ALhBE,ADAE,ADAF,AMCF,ACgBIF,AHjBF,ACCE,ANED,EQcCA,KRdIrO,CAAL,GQcU,ARdDA,CAAT,EQcagO,ILjBFjO,ADAEA,ADAFA,CEAZ,ADAE,ADAF,COiBoB,AFflB,CHFaC,ADAEA,ADAFA,AOiBMwO,CLjBrB,ADAE,ADAF,EEAkBxM,ADAE5B,ADAFA,EEAlB,AEAc,EFAQ6B,EAAtB,ADAE,ADAF,EEA0BhC,ADAE,ADAF,CEA1B,EAA6BC,CAA7B,EAAgCgC,IKiBlB,CLjBd,AKiB2CoM,ELjBJ,CKiBzB,CAAZ;ALjBqC,ADAX,ADAF,AOmBxB,AHnBY,ACEZ,ANED,MQeOG,CRfFxO,CAAL,GAASA,CAAT,EQee,GAAGkO,QAAQ,GAAGD,UAA5B;ADjBJ,ACkBI,ARfD,MQeKQ,CRfAxO,CAAL,GAASA,CAAT,EQea,GAAG,CAAf;ALnBA,ADAI,ADAJ,AIDY,ACGR,ANGL,SGLMH,ADAIA,ADAJA,AKEI0D,CHFT,ADAI,ADAJ,GEAS1D,ADAIA,ADAJA,CEAT,ADAI,ADAJ,MKEI,GAAmBoD,QAAQ,CAACO,cAAT,CAAwB,aAAxB,CAAnB;AHDL,ADAK,ADAL,AMCH,ACmBI,AFlBI,MEkBA6K,GLpBAvO,ADAKA,ADALA,AKEK2D,CHFV,ADAK,ADAL,EOoBW,CLpBF3D,ADAKA,ADALA,CEAT,ADAK,ADAL,COoBcyO,IFlBT,GAAkBtL,CEkBtB,EAAuB,KFlBO,CAACO,cAAT,CAAwB,YAAxB,CAAlB;AHDL,ADAK,ADAJ,AOoBI,AHtBJ,ACII,QEkBMiL,CLpBN3M,ADAK3B,ADAJA,AIFA4C,ACIIW,EHFV,EEFC,CFES5B,EAAV,ADAK,ADAJ,AIFY,EAAZ,ACII,CJFe5B,ADAJA,EOoBQ,AFlBF+C,GEkBKoL,CNpBtB,ADAJ,IKE6B,CEkBG,AFlBF7K,GEkBKyK,QAA/B,GFlBiB,CAAwB,WAAxB,CAAjB;AHDL,ADAK,ADAL,AMAH,ACoBQO,AHtBL,ACIK,IEkBAA,KLpBAzM,ADAKhC,AGFLiD,ACIKW,CJFL,CCAL,CKoBa,CNpBCzD,CCAJ6B,CKoBMZ,CLpBhB,AEFA,GHEoB,AMoBA,AHtBL,ACIV,CJFgBpB,AMoBAqB,CNpBhB,AGFL,CCIuB6B,GEkBP,CAAWwL,IFlBI,CAACjL,QEkBQ,GAAGwK,GFlBpB,CAAwB,MEkB/B,CAAX,KFlBkB,CAAlB;AHDL,ADAK,AMoBH,AHtBF/K,ACIK,IDJLA,KFEKlD,ADAKC,AIEA4D,CHFV,ADAK,EGFG,CFEC7D,ADAKG,AGFLgD,CFET,GGEK,EJFe,CAAClD,AIEAiD,CJFhB,OIEwB,CDJ7B,ACI8BO,CDJJ,SAA1B,EAAqC,ECIhB,CAAwB,ODJRL,CAAC,EAAI,ACIrB,CAAhB;AHDL,ADAK,AKAR,AFFI,ACKC,MDLD,GFEInD,ADAKQ,CCAV,CEFK,CAACuC,CFEG/C,ADAJ,CCAL,EDAiB,AGFhB,CAAUmD,CAAC,CAACC,CHEQ3C,KAAJ,CAAU,AGF1B,IAAuB,CHEQT,CAAf,CAAZ,CGFJ;AFGD,AKoBC,AHtBA,KAFD,EGwBM,ELpBDgC,EKoBKtB,CAAC,ELpBX,CKoBc,CAAb,CLpBYsB,CKoBItB,CAAC,GLpBlB,AKoBqB8N,QAApB,EAA8B9N,CAAC,EAA/B,EAAmC;ALnBpC,ADDK,AKAR,ACqBQuN,AHtBLhL,IGsBKgL,AHtBLhL,KHCS,GMqBI,AHtBL,CHCKvC,AGDJwC,CHCK,CMqBE+K,ENrBC,CAAZ,EAAevN,CAAC,EMqBG,CNrBA,CDDpBN,COsBuB4N,GNrBEhO,AGD7B,CHCK,ADDIK,AIAiB,EHCMK,CAAC,EAA5B,CDDU,AOsBV,CNpBA,AGFL,EAAmC,UAAAyC,CAAC,EAAI;AHG/B,ADFR/C,AOsBI,AHtBJ,IDRiB+B,EHQjB/B,GAAG,CAACE,CCESE,EGFN,EHEC,CAAUE,CAAV,CGFG,CJAX,AIAYqC,CJCV,CCCqB,CMoBZkL,CHtBJ,CAAU9K,CHEU1C,ADDpBN,AIDW,CAACiD,IHEI,AMoBnB,CNpB6B,CDD/B,CAAaxD,AIDR,CAAP,EHEsCG,ADFtC,CCEuB,CAAf,ADAN,KAAKI,OAAL,CAAaN,CAFf,EAEkB,KAAKM,OAAL,CAAaL,CAF/B,EAEkC,KAAKK,OAAL,CAAaJ,CAF/C,EAEkD,KAAKI,OAAL,CAAaH,CAF/D,EAGE,KAAKH,CAHP,EAGU,KAAKC,CAHf,EAGkB,KAAKK,OAAL,CAAaJ,CAH/B,EAGkC,KAAKI,OAAL,CAAaH,CAH/C;AGPF,AHYC,AOkBE,AHtBD,aAAO,IDRGH,CAAZ,ACQa,CAACmD,CDRClD,CAAf,KCQS,CAAaqD,CAAC,CDRef,ACQdgB,OAAf,CAAP,ACIA,CFZF,EAAiD;AAAA,AFUvC,AGDR,ACII,KDPL,MHIa,AIGHK,IJHO9C,CAAC,GAAG,CAAZ,CIGJ,CJHmBA,AIGHkD,CJHI,GAAG,AIGvB,KJH4B9D,CAAxB,EAA2BY,CAAC,EAA5B,EACA;AEXuC,AFYnC,AKHhB,ACuBI,AHtBD,ACIK,ICLJyD,IHTiB/B,GEcRoB,EJFQjD,EEZ8B,EFYnC,CAAUE,AMoBjBmH,CNpBO,AKHhB,ELG6BlH,AIErB,CJFQ,AIEQmD,EEkBpB,ENpB8B,AMoBjBuK,AFlBT,CHJChO,EGIsB,CJFf,EMoBZ,CLtBW,AGIP;AFd2C,ADW9C,ADEQ,AKFb,ACsBI6N,AHrBF,ACGG,EEkBDA,EDtBA7J,EAAE,EHXwB/B,CGWrB,GCsBK,GJjCqC,AIiClC+L,MAAb;ALrBE,ADEG,AKHE,ACuBV,AHrBD;ADbmD,ADa7C,AIDF/J,AFEJ,EEFIA,OAAO,EJCAzE,AIDC,CJCN,IAAU,KAAKiC,EAAf;AACA,ADCE,AKFAyC,ACuBR,AHrBA,IEFQA,KLEK3D,AMqBJsJ,CDvBK,CJCHpK,CAAL,AIDU,CLER,GCDQ,ADCI,CMqBpB,GAAoB,CLtBCiC,ADCb,ECDF,eGIF;AFjBA,ADcD,ADCE,AKJO,ACyBR+L,AHrBJ,ACGQ,EEkBJA,CD1BK,KC0BC,CJpCDjO,AIoCE6O,CJpCP,CEkBSnL,EFlBA1D,CAAT,QEkBI,CAAiBkE,KAAjB,CEkBJ,CAA4BoK,SAA5B;AJnCD,AGaC3J,ACuBH,AFlBO,ECLJA,OHbI1E,AGaG,CHbR,CGaU,ADKAyD,EFlBDzD,CAAT,EGSM,MDSD,CAAiBkE,WAAjB,GAA+B,CAA/B;AFjBL,AGaCS,ADKI,ECLJA,KAAK,EHbDlC,AGaG,CALF,CDUIgB,KFlBV,GAAe,GEkBV,CFlBL,AEkBsBM,IAAjB;AFjBJ,AGaAa,ACuBJ,AFlBK,ECLDA,KAAK,EHbAlC,AGaE,ACuBFiF,CD7BA,OHPL,GAAgBpF,KDabjC,CKuBP,CJpCI,EIoCyB,CLvBjB;ACZR,ADaAA,AIAAuE,ACuBFsJ,EDvBEtJ,ACuBFsJ,ILvBE7N,CIAK,EHbAqC,ADaF,AIAI,CJAHR,AIPC,AC8BC,GAAG0M,IJpCT,EDaA,CCbgBrM,EDaA,EKuBI,CNvBflC,AMuBgBwO,EJpCrB,ADaqB5M,CKuBZ,ENvBC3B,AMuBZ,ELvBE,IDAgB;AEZhB,ADaDD,ADAKA,AKAJwE,ACuBFsJ,EDvBEtJ,ACuBFsJ,ILvBC9N,ADAKA,GEbCsC,ADaH,ADAK,CCAJR,ADAK5B,EMuBA,GDvBK,ACuBF2N,EDvBI,CHbf,ADaD,CAAa,ADAR,CACI,CEdS,EIoCnB,CLvBmBpO,CCbjB,ADaD,ADCcM,ECDO,AEFfkD,KFEoBvD,ADCjB,CCDT,ADCsBF,AGHV,EFEiB,CDAxB,EAEI,ECFyBG,CAAlC,EAAqC,ADEvBI,KCF4BH,CAA1C,CDES,CAAaH,CAFjB,EAEoB,KAAKM,OAAL,CAAaL,CAFjC,EAEoC,KAAKK,OAAL,CAAaJ,CAFjD,EAEoD,KAAKI,OAAL,CAAaH,CAFjE,EAGI,KAAKH,CAHT,EAGY,KAAKC,CAHjB,EAGoB,KAAKK,OAAL,CAAaJ,CAHjC,EAGoC,KAAKI,OAAL,CAAaH,CAHjD;AEZJ,ADaD,ADKK,AKdC,ACgCPmO,AHzBC,CEPH,CCgCEA,OJpCOxL,CFkBK9B,CMkBH,EHzBD,CGyBI,GNlBO,CElBjB,AIoCF,AHzBakC,EHOS,CElBH,CCWX,CAAUM,EHOStD,CElBzB,AFkBoB,CGPd,CAAP,CHO8B,KAAKC,CAA9B,CIAJ;AFjBA,AFkBI,AKJR,ACsBE,AHzBC,ACOK,ICJJ6E,KHdKzC,CFkBGtB,CIAC4C,CCJD,ELII,CKJD,ELII,CElBf,AFkBI,AMkBDmE,EFlBC,CFlBazF,AEkBE2B,GEkBrB,EFlBM,IFlBJ;AACD,AFkBK,AKJJe,ACsBFsJ,AHxBA,ACMM,ECJJtJ,ACsBFsJ,GAAG,EDtBI,EAAE,CLICrN,AKLG,CDKF2C,GJAG,GAAG,CAAX,EIAA,CAAeM,WAAf,GAA6B,CAA7B;ACJM,ACuBb,AHxBD,ACMQ,WAAKN,SAAL,CAAeG,IAAf;AJAA,AKJJkB,AFDJ,ACMK,ECLDA,QLIO,CAAC,CKJE,EAAE,ELICnE,AKNF,ILMP,EACA;AACI,AKNQ,ACwBpB,AHxBA,YHMgBI,OMkBRyG,CNlBe,GAAGrH,GAAG,CAACa,SMkB9B,GNlB0B,CAAiB,KAAKpB,CAAtB,EAAyB,KAAKC,CAA9B,EAAiC,KAAKC,CAAtC,EAAyC,KAAKC,CAA9C,CAAd;AKLRgF,AFAJ,EEAIA,UAAU,EAAE,EAHD,SHXR5E,KAAKC,MACV;AACE,AFkBQ,AKNQ,UHZb,GFkBU,EElBLkC,EFkBS7B,CAAC,GAAG,CElBrB,AFkBQ,EEjBR,AFiBwBA,CAAC,GAAGG,OAApB,EAA6BH,AICrC,CJDsC,EAA9B,EACA;AEjBN,AFkBUM,AKPZiE,ADOI,ECPJA,IAAI,EAAC,ELOOjE,CIAH2C,CFlBHf,EAAE,GAAIzB,CFkBO,CAACD,EElBJ,AEkBZ,CFlBa2B,AEkBGkB,CJAR,CAAarD,CAAC,CElBd,CAAUL,AEkBlB,CJAyB,CAAJ,EElBC,CFkBO,CAArB,CElBiB,GFkBS,CAA1B,CElBsBqC,SAAtB,IAAmC,CAAnC,KAAyC,CAA1C,GAA+C,KAAKF,QAApD,GAA+D,KAAKC,QAA7E;AAEArC,AFiBUU,AKPRoE,ADOA,ICPAA,IHVF9E,EFiBUU,CEjBP,AEiBI6C,CFjBHrD,EFiBU,GAAGa,AKPF,EAAE,EHVjB,AFiBqB,AIAnB,CFhBEyB,AFgBkBxB,AIAJ4C,CCRf,CHRG,AGSiB,CHThBpE,EFgBU,CEjBjB,AFiB4Bc,CAAC,CEfzBkC,EAAE,AFe0B,CEfzB/C,AEeL,CFjBF,EAEU+C,AEesB,CJAK7C,AIAnC,CFfU,AFeK,CEfJD,AFeH,CEjBV,EAEgB8C,EAAE,CAAC7C,CAFnB,EAEsB6C,EAAE,CAAC5C,CAFzB,EAGI,KAAKH,CAHT,EAGY,KAAKC,CAHjB,EAGoB8C,EAAE,CAAC7C,CAHvB,EAG0B6C,EAAE,CAAC5C,CAH7B;AAKD,AFaWe,AIAR,UJAQA,CIAH4C,GJAO,GAAGjD,CAAC,GAAG,AIAnB,CAAgBmD,IJAQ9D,AIAxB,CJAmB,GAASe,AGTxBuC,IHSI,EGTE;ADHf,AGGM,AFCN,ACSE,GCdU;ALcC,AKPZ8B,AFDD,EECCA,KAAK,EAAE,KLOQnE,QAAO,CAACE,IAAR,CAAaR,CAAC,GAAG,CAAJ,GAAQ,CAArB,MAA4B,GAA/B,EACA;AACI,AKRZ0E,AFDL,IECKA,MFDD,IECW,CFDNpC,CECQ,CLQKxC,AKRJ,CAAD,EAAI,CLQJ,AKRA,CLQUM,AGTvB,CECoB,AFDPuC,CECA,ELQA,AKRU,CAAV,AFDb,CHS6BtC,AGTjC,CEC8B,CAAb,AFDO,EHSP,AKRgB,CAAhB,CADT,ELSiC,IAAxB;AACH,AKTuB,AFApC,WHMY,IGNL,EHWK,GGXZ,eCSA;AJGgB,AKXZsE,AFAJ,ACSI,ICTAA,GFFL,ICWU5B,ECTI,AFAP,EEAS,ELWMjD,AKbd,AFEG,IHWM,AIFZ,CJEsBM,AGXXiC,ACSKgB,IJEJ,AGXN,CAAUV,ACShB,CJE4BtC,GGXtB,CHWM,AGXV,EAAqB,EHWa,KAAxB;AACH,AKZM,AFCnB,ACSI,WAAK0C,IDTF,KAAKT,CCSR,CAAgBgB,KDTb,CAAaX,IAAb,CCSH,GDTwB,ACSM,CAA9B,GDTJ;AHYS,AKZLiC,AFCJ,ACUI,ICXAA,ODWK1B,ECXI,EAAE,CAHR,GDcH,CAAcI,WAAd,GAA4B,CAA5B;ACXc,ADY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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["export default class Sprite {\r\n  constructor(img, x, y, w, h) {\r\n    this.img = img;\r\n  \tthis.x = x;\r\n  \tthis.y = y;\r\n  \tthis.w = w;\r\n  \tthis.h = h;\r\n  }\r\n}\r\n","export default class Cannon {\r\n  constructor(x, y, sprite) {\r\n    this.x = x;\r\n  \tthis.y = y;\r\n    this._sprite = sprite;\r\n  }\r\n\r\n  draw(ctx, time) {\r\n    ctx.drawImage(\r\n      this._sprite.img,\r\n      this._sprite.x, this._sprite.y, this._sprite.w, this._sprite.h,\r\n      this.x, this.y, this._sprite.w, this._sprite.h\r\n    );\r\n  }\r\n}\r\n","export default class Bunker {\r\n    constructor(x, y, sprite) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this._sprite = sprite;\r\n        this.w = sprite.w\r\n        this.h = sprite.h\r\n        this.mask = new Array(this.h);\r\n        for(let i = 0; i < this.h; i++)\r\n        {\r\n            this.mask[i] = new Array(this.w)\r\n            for(let j = 0; j < this.w; j++)\r\n            {\r\n                this.mask[i][j] = true;\r\n            }\r\n        }\r\n        this.init = false\r\n    }\r\n\r\n    draw(ctx, time) {\r\n        ctx.drawImage(\r\n            this._sprite.img,\r\n            this._sprite.x, this._sprite.y, this._sprite.w, this._sprite.h,\r\n            this.x, this.y, this._sprite.w, this._sprite.h\r\n        );\r\n\r\n        const imgSize = this.w * this.h\r\n        let indF = 0\r\n        let indS = 0\r\n        if(!this.init)\r\n        {\r\n            let myImage = ctx.getImageData(this.x, this.y, this.w, this.h);\r\n            for (let i = 0; i < imgSize; i++)\r\n            {\r\n                myImage.data[i * 4 + 0] = 0\r\n                indF = Math.floor(i / this.w)\r\n                indS = i - this.w * indF\r\n                if(myImage.data[i * 4 + 1] === 250)\r\n                {\r\n                    this.mask[indF][indS] = true\r\n                }\r\n                else\r\n                {\r\n                    this.mask[indF][indS] = false\r\n                }\r\n            }\r\n            this.init = true\r\n            ctx.putImageData(myImage, this.x, this.y)\r\n        }\r\n\r\n        let myImage = ctx.getImageData(this.x, this.y, this.w, this.h);\r\n\r\n\r\n        for (let i = 0; i < imgSize; i++)\r\n        {\r\n            indF = Math.floor(i / this.w)\r\n            indS = i - this.w * indF\r\n            myImage.data[i * 4 + 3] = this.mask[indF][indS] ? 255 : 0\r\n        }\r\n        ctx.putImageData(myImage, this.x, this.y)\r\n    }\r\n\r\n    hasPoint(x, y)\r\n    {\r\n        if (x >= this.x && x < this.x + this.w &&\r\n            y >= this.y && y < this.y + this.h &&\r\n            this.mask[y - this.y][x - this.x])\r\n        {\r\n            this.destroyPoint(x, y)\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    destroyPoint(x, y)\r\n    {\r\n        let firtsCoord = y - this.y\r\n        let secondCoord = x - this.x\r\n        this.mask[firtsCoord][secondCoord] = false\r\n\r\n        const isTop = firtsCoord > 0\r\n        const isBot = firtsCoord < this.h - 1\r\n        const isLeft = secondCoord > 0\r\n        const isRight = secondCoord < this.w - 1\r\n\r\n        if (isRight) {this.mask[firtsCoord][secondCoord + 1] = false}\r\n        if (isLeft)  {this.mask[firtsCoord][secondCoord - 1] = false}\r\n        if (isTop)\r\n        {\r\n            {this.mask[firtsCoord - 1][secondCoord + 1] = false}\r\n            {this.mask[firtsCoord - 1][secondCoord    ] = false}\r\n            {this.mask[firtsCoord - 1][secondCoord - 1] = false}\r\n        }\r\n        if (isBot)\r\n        {\r\n            {this.mask[firtsCoord + 1][secondCoord + 1] = false}\r\n            {this.mask[firtsCoord + 1][secondCoord    ] = false}\r\n            {this.mask[firtsCoord + 1][secondCoord - 1] = false}\r\n        }\r\n    }\r\n}\r\n","export default class Bullet {\r\n  constructor(x, y, vx, vy, w, h, color) {\r\n    this.x = x;\r\n  \tthis.y = y;\r\n  \tthis.vx = vx;\r\n  \tthis.vy = vy;\r\n  \tthis.w = w;\r\n  \tthis.h = h;\r\n  \tthis.color = color;\r\n  }\r\n\r\n  update(time) {\r\n     // this.x = Math.floor(this.x + this.vx);\r\n      //this.y = Math.floor(this.y + this.vy);\r\n      this.x += this.vx;\r\n      this.y += this.vy;\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.fillStyle = this.color;\r\n  \tctx.fillRect(this.x, this.y, this.w, this.h);\r\n  }\r\n}\r\n","export default class Alien {\r\n  constructor(x, y, [spriteA, spriteB], alienType) {\r\n    this.x = x;\r\n  \tthis.y = y;\r\n  \tthis.isAlive = true;\r\n    this._spriteA = spriteA;\r\n    this._spriteB = spriteB;\r\n    this.blinkTime = 1000;\r\n    this.isInjured = false;\r\n    this.alienType = alienType;\r\n  }\r\n\r\n  draw(ctx, time)\r\n  {\r\n    if(this.isAlive)\r\n    {\r\n      let sp = (Math.ceil(time / this.blinkTime) % 2 === 0) ? this._spriteA : this._spriteB;\r\n\r\n      ctx.drawImage(\r\n          sp.img,\r\n          sp.x, sp.y, sp.w, sp.h,\r\n          this.x, this.y, sp.w, sp.h\r\n      );\r\n    }\r\n  }\r\n}\r\n","export default class InputHandler {\r\n  constructor() {\r\n    this.down = {};\r\n  \tthis.pressed = {};\r\n  \tdocument.addEventListener(\"keydown\", e => {\r\n  \t\tthis.down[e.keyCode] = true;\r\n  \t});\r\n  \tdocument.addEventListener(\"keyup\", e => {\r\n  \t\tdelete this.down[e.keyCode];\r\n  \t\tdelete this.pressed[e.keyCode];\r\n  \t});\r\n  }\r\n\r\n  /**\r\n   * Returns whether a key is pressod down\r\n   * @param  {number} code the keycode to check\r\n   * @return {bool} the result from check\r\n   */\r\n  isDown(code) {\r\n  \treturn this.down[code];\r\n  }\r\n\r\n  /**\r\n   * Return wheter a key has been pressed\r\n   * @param  {number} code the keycode to check\r\n   * @return {bool} the result from check\r\n   */\r\n  isPressed(code) {\r\n  \t// if key is registred as pressed return false else if\r\n  \t// key down for first time return true else return false\r\n  \tif (this.pressed[code]) {\r\n  \t\treturn false;\r\n  \t} else if (this.down[code]) {\r\n  \t\treturn this.pressed[code] = true;\r\n  \t}\r\n  \treturn false;\r\n  }\r\n}\r\n","export default class Sounds\r\n{\r\n    constructor()\r\n    {\r\n        this.cannonShoot = document.getElementById(\"cannonShoot\");\r\n        this.background = document.getElementById(\"background\");\r\n        this.alienDead = document.getElementById(\"alienDead\");\r\n        this.cannonDead = document.getElementById(\"cannonDead\");\r\n        this.gameOver = document.getElementById(\"gameOver\");\r\n\r\n    }\r\n\r\n    playBackground()\r\n    {\r\n        this.background.play();\r\n        this.background.loop = true;\r\n    }\r\n\r\n    playCannonShoot()\r\n    {\r\n        this.cannonShoot.pause();\r\n        this.cannonShoot.currentTime = 0;\r\n        this.cannonShoot.play();\r\n    }\r\n\r\n    playAlienDead()\r\n    {\r\n        this.alienDead.pause();\r\n        this.alienDead.currentTime = 0;\r\n        this.alienDead.play();\r\n    }\r\n\r\n    playCannonDead()\r\n    {\r\n        this.cannonDead.pause();\r\n        this.cannonDead.currentTime = 0;\r\n        this.cannonDead.play();\r\n    }\r\n\r\n    playGameOver()\r\n    {\r\n        this.background.pause();\r\n        this.background.currentTime = 0;\r\n\r\n        this.gameOver.currentTime = 0;\r\n        this.gameOver.play();\r\n        this.gameOver.addEventListener(\"ended\", this.replayBackground.bind(null,this));\r\n    }\r\n\r\n    replayBackground(player)\r\n    {\r\n        player.background.play();\r\n        player.background.loop = true;\r\n    }\r\n}","import Sprite from './sprite'\r\nimport Cannon from './cannon'\r\nimport Bunker from './bunker'\r\nimport Bullet from './bullet'\r\nimport Alien from './alien'\r\nimport InputHandler from './input-handler'\r\n\r\nimport assetPath from '../assets/invaders.png'\r\nimport Sounds from './sounds'\r\n\r\nlet canvasForReplay;\r\n\r\nlet gs = { // game state. Dont change! It isn't a settings!\r\n    seconds:{\r\n        aShoot: 0,\r\n    },\r\n    started: false,\r\n    level: 1,\r\n    score: 0,\r\n    lives: 3,\r\n    goToNextLevel: false,\r\n}\r\n\r\nlet settings = {\r\n    lineW: 6, // width of background line\r\n    headerSize: 50, // top offset in background\r\n    footerSize: 50, // bottom offset in background\r\n    game:{\r\n        nextLevelWait: 2000, // ms waiting time between levels\r\n    },\r\n    alien: {\r\n        alienTypes: [2, 1, 0, 2, 1, 0], // types numbers in each line\r\n        inOneLine: 11, // pcs // amount of alien in one line. It means amount rows\r\n        shootTime: 1, // sec // each shootTime lower of aliens are shoot\r\n        size: 33, // px // size of one alien\r\n        shootProbability: 0.1, // probability of alien shooting\r\n        BulletMult: 300, // amount steps like a speed\r\n        injDist: 33, // distance from center of alien ot point C on line in detecting injuring\r\n        killDist: 15, // distance from center of alien ot point C on line in detecting killing. < injDist\r\n        collisionMaxStepPx: 1, // step on line while detecting collision. <= killDist. This parameter should be == 1 if bunkers intersect by masks\r\n        aliveAfterKilling: 1500, // ms alive time when killing\r\n        shootInterval: 200, // ms between few shootings\r\n        makeNotInjuredTime: 2000, // ms how much time alien will be injured. Injured could shoot only one bullet per time\r\n        blockMovingVx: 1, // moving step in x axis\r\n        blockMovingVy: 1, // moving step in y axis\r\n        blockMovingTime: 100, // ms between moving\r\n        blockMovChangeDirProbability: 0.05, // sometimes it's change direction\r\n    },\r\n    cannon: {\r\n        step: 4, // px // each tep of <- or -> move cannon on step px\r\n        baseBulletSpeed: 8,\r\n        bulletSpeedProbabilityRange: 0.2,\r\n        killDist: 11, // distance from center of alien to point C on line in detecting killing. < injDist\r\n        collisionMaxStepPx: 1, // step on line while detecting collision. <= killDist. This parameter should be == 1 if bunkers intersect by masks\r\n    },\r\n    bunker:{\r\n        amount: 4,\r\n        distanceFromCannon: 50,\r\n    },\r\n}\r\n\r\nlet safeArea = { // will be set after\r\n    l: 0,\r\n    t: 0,\r\n    r: 0,\r\n    b: 0,\r\n}\r\n\r\nlet assets;\r\nlet soundPlayer;\r\n\r\nconst sprites = {\r\n  aliens: [],\r\n  cannon: null,\r\n  bunker: null\r\n};\r\n\r\nconst objs = {\r\n    bullets: [],\r\n    aliens: [],\r\n    bunkers: [],\r\n    cannon: null,\r\n};\r\nconst inputHandler = new InputHandler();\r\n\r\nexport function preload(onPreloadComplete)\r\n{\r\n    assets = new Image();\r\n    assets.addEventListener(\"load\", () => {\r\n        sprites.cannon = new Sprite(assets, 62, 0, 22, 16);\r\n        sprites.bunker = new Sprite(assets, 84, 8, 36, 24);\r\n        sprites.aliens = [\r\n            [new Sprite(assets,  0, 0, 22, 16), new Sprite(assets,  0, 16, 22, 16)],\r\n            [new Sprite(assets, 22, 0, 16, 16), new Sprite(assets, 22, 16, 16, 16)],\r\n            [new Sprite(assets, 38, 0, 24, 16), new Sprite(assets, 38, 16, 24, 16)]\r\n        ]\r\n\r\n        onPreloadComplete();\r\n    });\r\n    assets.src = assetPath;\r\n}\r\n\r\nexport function init(canvas)\r\n{\r\n    canvasForReplay = canvas\r\n    if(gs.started)\r\n    {\r\n        setAliens(gs.level)\r\n\r\n        objs.cannon = new Cannon(100, canvas.height - settings.footerSize - sprites.cannon.h - Math.floor(settings.lineW / 2), sprites.cannon);\r\n\r\n        for(let i = 0; i < settings.bunker.amount; i++)\r\n        {\r\n            objs.bunkers.push(new Bunker(100, canvas.height - settings.footerSize - sprites.bunker.h - Math.floor(settings.lineW / 2) - settings.bunker.distanceFromCannon, sprites.bunker))\r\n        }\r\n\r\n        gs.timer = setTimeout(timer_tictoc, 1000);\r\n        setTimerMoving();\r\n        soundPlayer = new Sounds()\r\n        soundPlayer.playBackground()\r\n    }\r\n}\r\n\r\nfunction setTimerMoving()\r\n{\r\n    if(isAnyAliveAliens())\r\n    {\r\n        moveAliens()\r\n    }\r\n    setTimeout(setTimerMoving, settings.alien.blockMovingTime)\r\n}\r\n\r\nfunction timer_tictoc()\r\n{\r\n    gs.seconds.aShoot += 1;\r\n    if(gs.seconds.aShoot === settings.alien.shootTime && gs.lives > 0)\r\n    {\r\n        aliensStartShoot()\r\n        gs.seconds.aShoot = 0\r\n    }\r\n    gs.timer = setTimeout(timer_tictoc, 1000);\r\n}\r\n\r\nexport function update(time)\r\n{\r\n    if(gs.started)\r\n    {\r\n        if(gs.lives > 0)\r\n        {\r\n            // Left\r\n            let potentialX = objs.cannon.x - settings.cannon.step\r\n            if (inputHandler.isDown(37) &&\r\n                potentialX >= safeArea.l)\r\n            {\r\n                objs.cannon.x = potentialX;\r\n            }\r\n\r\n            // Right\r\n            potentialX = objs.cannon.x + settings.cannon.step\r\n            if (inputHandler.isDown(39) &&\r\n                potentialX + Math.floor(objs.cannon._sprite.w / 2) <= safeArea.r - safeArea.l)\r\n            {\r\n                objs.cannon.x = potentialX;\r\n            }\r\n\r\n            // Space\r\n            if (inputHandler.isPressed(32))\r\n            {\r\n                const bulletX = objs.cannon.x + Math.floor(objs.cannon._sprite.h / 2);\r\n                const bulletY = objs.cannon.y;\r\n                const bulletVy = -1 * settings.cannon.baseBulletSpeed * (1 - settings.cannon.bulletSpeedProbabilityRange + Math.random() * settings.cannon.bulletSpeedProbabilityRange * 2)\r\n                objs.bullets.push(new Bullet(bulletX, bulletY, 0, bulletVy, 4, 8, \"green\"));\r\n                soundPlayer.playCannonShoot()\r\n            }\r\n\r\n            objs.bullets.forEach(b => b.update(time));\r\n            checkBulletIntersection()\r\n            checkAreBulletsInSafeArea()\r\n            if(!isAnyAliveAliens())\r\n            {\r\n                goToNextLevel()\r\n            }\r\n        }\r\n        else if (inputHandler.isPressed(32))\r\n        {\r\n            // replay\r\n            objs.cannon = null\r\n            objs.bullets = []\r\n            objs.aliens = []\r\n            objs.bunkers = []\r\n            gs.lives = 3\r\n            gs.score = 0\r\n            gs.level = 1\r\n            gs.seconds.aShoot = 0\r\n\r\n            init(canvasForReplay)\r\n        }\r\n    }\r\n    else if (inputHandler.isPressed(32))\r\n    {\r\n        // replay\r\n        objs.cannon = null\r\n        objs.bullets = []\r\n        objs.aliens = []\r\n        objs.bunkers = []\r\n        gs.lives = 3\r\n        gs.score = 0\r\n        gs.level = 1\r\n        gs.seconds.aShoot = 0\r\n        gs.started  = true\r\n        init(canvasForReplay)\r\n    }\r\n}\r\n\r\nfunction isAnyAliveAliens()\r\n{\r\n    for(let i = 0; i < objs.aliens.length; i++)\r\n    {\r\n        if(objs.aliens[i].isAlive)\r\n        {\r\n            return true\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\nfunction moveAliens()\r\n{\r\n    if(gs.lives > 0 && gs.goToNextLevel == false)\r\n    {\r\n        // Y axis\r\n        settings.alien.blockMovingVy *= (Math.random() < settings.alien.blockMovChangeDirProbability) ? -1 : 1\r\n\r\n        if (settings.alien.blockMovingVy > 0) {\r\n            // check if bottom of block will not touch top of bunkers\r\n            let touch = false\r\n            // first let's find bottom alive alien\r\n            let founded = false\r\n            let bottom = -1\r\n            for (let i = settings.alien.alienTypes.length - 1; i >= 0 && !founded; i--) {\r\n                for (let j = 0; j < settings.alien.inOneLine; j++) {\r\n                    if (objs.aliens[i * settings.alien.inOneLine + j].isAlive) {\r\n                        founded = true\r\n                        bottom = objs.aliens[i * settings.alien.inOneLine + j].y + settings.alien.size;\r\n                    }\r\n                }\r\n            }\r\n            if (!founded) {\r\n                return\r\n            }\r\n            touch = bottom + settings.alien.blockMovingVy + 0.5 >= objs.bunkers[0].y\r\n            settings.alien.blockMovingVy = (touch ? -1 : 1) * Math.abs(settings.alien.blockMovingVy)\r\n        } else {\r\n            // check if top of block will not touch top of safe area\r\n            let touch = false\r\n            // first let's find top alive alien\r\n            let founded = false\r\n            let top = -1\r\n            for (let i = 0; i < settings.alien.alienTypes.length && !founded; i++) {\r\n                for (let j = 0; j < settings.alien.inOneLine; j++) {\r\n                    if (objs.aliens[i * settings.alien.inOneLine + j].isAlive) {\r\n                        founded = true\r\n                        top = objs.aliens[i * settings.alien.inOneLine + j].y;\r\n                    }\r\n                }\r\n            }\r\n            if (!founded) {\r\n                return\r\n            }\r\n            touch = top + settings.alien.blockMovingVy - 0.5 < safeArea.t\r\n            settings.alien.blockMovingVy = touch ? Math.abs(settings.alien.blockMovingVy) : settings.alien.blockMovingVy\r\n        }\r\n        objs.aliens.forEach(a => a.y += settings.alien.blockMovingVy);\r\n\r\n        // X axis\r\n        settings.alien.blockMovingVx *= (Math.random() < settings.alien.blockMovChangeDirProbability)? -1: 1\r\n\r\n        if (settings.alien.blockMovingVx > 0) {\r\n            // check if bottom of block will not touch top of bunkers\r\n            let touch = false\r\n            // first let's find right alive alien\r\n            let founded = false\r\n            let right = -1\r\n            for (let j = settings.alien.inOneLine - 1; j >= 0; j--) {\r\n                for (let i = 0; i < settings.alien.alienTypes.length && !founded; i++) {\r\n                    if (objs.aliens[i * settings.alien.inOneLine + j].isAlive) {\r\n                        founded = true\r\n                        right = objs.aliens[i * settings.alien.inOneLine + j].x + settings.alien.size;\r\n                    }\r\n                }\r\n            }\r\n            if (!founded) {\r\n                return\r\n            }\r\n            touch = right + settings.alien.blockMovingVx + 0.5 >= safeArea.r\r\n            settings.alien.blockMovingVx = touch ? -1 * Math.abs(settings.alien.blockMovingVx) : settings.alien.blockMovingVx\r\n        } else {\r\n            // check if top of block will not touch top of safe area\r\n            let touch = false\r\n            // first let's find left alive alien\r\n            let founded = false\r\n            let left = -1\r\n            for (let j = 0; j <= settings.alien.inOneLine; j++) {\r\n                for (let i = 0; i < settings.alien.alienTypes.length && !founded; i++) {\r\n                    if (objs.aliens[i * settings.alien.inOneLine + j].isAlive) {\r\n                        founded = true\r\n                        left = objs.aliens[i * settings.alien.inOneLine + j].x;\r\n                    }\r\n                }\r\n            }\r\n            if (!founded) {\r\n                return\r\n            }\r\n            touch = left + settings.alien.blockMovingVx - 0.5 < safeArea.l\r\n            settings.alien.blockMovingVx = touch ? Math.abs(settings.alien.blockMovingVx) : settings.alien.blockMovingVx\r\n        }\r\n        objs.aliens.forEach(a => a.x += settings.alien.blockMovingVx);\r\n    }\r\n}\r\n\r\nfunction setAliens(lvl)\r\n{\r\n    if(lvl === 1)\r\n    {\r\n        settings.alien.alienTypes = [2, 1, 0, 2, 1, 0] // types numbers in each line\r\n        settings.alien.inOneLine = 11 // pcs // amount of alien in one line. It means amount rows\r\n        settings.alien.shootProbability = 0.1\r\n        settings.alien.blockMovingTime = 100\r\n    }\r\n    else if(lvl === 2)\r\n    {\r\n        settings.alien.alienTypes = [2, 1, 2, 1] // types numbers in each line\r\n        settings.alien.inOneLine = 5 // pcs // amount of alien in one line. It means amount rows\r\n        settings.alien.shootProbability = 0.5\r\n        settings.alien.blockMovingTime = 70\r\n    }\r\n    else\r\n    {\r\n        settings.alien.alienTypes = [2, 1, 0] // types numbers in each line\r\n        settings.alien.inOneLine = 5 // pcs // amount of alien in one line. It means amount rows\r\n        settings.alien.shootProbability = 0.75\r\n        settings.alien.blockMovingTime = 50\r\n    }\r\n\r\n    objs.aliens = []\r\n    for (let i = 0, len = settings.alien.alienTypes.length; i < len; i++)\r\n    {\r\n        const alienType = settings.alien.alienTypes[i];\r\n        for (let j = 0; j < settings.alien.inOneLine; j++)\r\n        {\r\n            let alienX = settings.alien.size * (j + 1);\r\n            let alienY = settings.alien.size * (i + 1) + settings.headerSize;\r\n\r\n            objs.aliens.push(new Alien(alienX, alienY, sprites.aliens[alienType], alienType));\r\n        }\r\n    }\r\n}\r\n\r\nfunction goToNextLevel()\r\n{\r\n    if(gs.goToNextLevel === false)\r\n    {\r\n        stopGame()\r\n        gs.goToNextLevel = true\r\n        setTimeout(startNextLevel, settings.game.nextLevelWait)\r\n    }\r\n}\r\n\r\nfunction startNextLevel()\r\n{\r\n    gs.goToNextLevel = false\r\n    objs.aliens = []\r\n    objs.bullets = []\r\n    gs.level += 1\r\n    setAliens(gs.level)\r\n}\r\n\r\nfunction checkAreBulletsInSafeArea()\r\n{\r\n    for(let i = 0; i < objs.bullets.length; i++)\r\n    {\r\n        if (objs.bullets[i].x < safeArea.l ||\r\n            objs.bullets[i].x > safeArea.r ||\r\n            objs.bullets[i].y < safeArea.t ||\r\n            objs.bullets[i].y > safeArea.b + safeArea.t)\r\n        {\r\n            objs.bullets.splice(i,1);\r\n        }\r\n    }\r\n}\r\n\r\nfunction checkBulletIntersection()\r\n{\r\n    for(let i = 0; i < objs.bullets.length; i++)\r\n    {\r\n        if (objs.bullets[i].color === \"white\")\r\n        {\r\n            checkCannonOnLine(objs.bullets[i].x, objs.bullets[i].y,objs.bullets[i].x-objs.bullets[i].vx, objs.bullets[i].y - objs.bullets[i].vy, i)\r\n        }\r\n        else if(objs.bullets[i].color === \"green\")\r\n        {\r\n            checkAlienOnLine(objs.bullets[i].x, objs.bullets[i].y,objs.bullets[i].x-objs.bullets[i].vx, objs.bullets[i].y - objs.bullets[i].vy, i)\r\n        }\r\n    }\r\n}\r\n\r\nfunction checkAlienOnLine(ax, ay, bx ,by,indBullet)\r\n{\r\n    const vxFull = ax - bx\r\n    const vyFull = ay - by\r\n    const steps = Math.floor(Math.max(Math.abs(vxFull), Math.abs(vyFull)) / settings.alien.collisionMaxStepPx)\r\n\r\n    // check for boxes between a and b\r\n    let xStep = 0\r\n    let yStep = 0\r\n    let stepCounter = 1 // not 0 because we don't need to check point b\r\n    let killed = false\r\n    let toPointA = false\r\n    let c = {\r\n        x: bx,\r\n        y: by,\r\n    }\r\n\r\n    if (steps !== 0)\r\n    {\r\n        xStep = vxFull / steps\r\n        yStep = vyFull / steps\r\n        c.x += xStep\r\n        c.y += yStep\r\n    }\r\n    else\r\n    {\r\n        stepCounter = steps + 1\r\n        toPointA = true\r\n        c.x = ax\r\n        c.y = ay\r\n    }\r\n\r\n    while ((stepCounter <= steps  || toPointA) && !killed)\r\n    {\r\n        for(let i = 0; i < objs.aliens.length; i++)\r\n        {\r\n            if(objs.aliens[i].isAlive)\r\n            {\r\n                let xDist = Math.abs(c.x - (objs.aliens[i].x + settings.alien.size / 2))\r\n                if(xDist <= settings.alien.injDist / 2)\r\n                {\r\n                    let yDist = Math.abs((c.y - (objs.aliens[i].y + settings.alien.size / 2)))\r\n                    if(yDist <= settings.alien.injDist / 2)\r\n                    {\r\n                        injureAlien(i)\r\n                        if(xDist <= settings.alien.killDist / 2 && yDist <= settings.alien.killDist / 2)\r\n                        {\r\n                            killAlien(i)\r\n                            killed = true\r\n                            // destroyBullet\r\n                            objs.bullets.splice(indBullet,1)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // check is here bunker\r\n        for(let i = 0; i < objs.bunkers.length && !killed; i++)\r\n        {\r\n            if(objs.bunkers[i].hasPoint(Math.floor(c.x), Math.floor(c.y)))\r\n            {\r\n                objs.bullets.splice(indBullet,1)\r\n                killed = true\r\n            }\r\n        }\r\n\r\n        if(toPointA)\r\n        {\r\n            toPointA = false\r\n        }\r\n        else if (steps !== 0)\r\n        {\r\n            c.x += xStep\r\n            c.y += yStep\r\n            stepCounter += 1\r\n\r\n            if (stepCounter > steps)\r\n            {\r\n                toPointA = true\r\n                c.x = ax\r\n                c.y = ay\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction injureAlien(index)\r\n{\r\n    if(!objs.aliens[index].isInjured)\r\n    {\r\n        objs.aliens[index].blinkTime = 350\r\n        objs.aliens[index].isInjured = true\r\n    }\r\n    setTimeout(makeNotInjured, settings.alien.makeNotInjuredTime, index)\r\n}\r\n\r\nfunction makeNotInjured(index)\r\n{\r\n    objs.aliens[index].blinkTime = 1000\r\n    objs.aliens[index].isInjured = false\r\n}\r\n\r\nfunction killAlien(index)\r\n{\r\n    if(objs.aliens[index].blinkTime !== 100)\r\n    {\r\n        gs.score += gs.level\r\n        objs.aliens[index].blinkTime = 100\r\n        setTimeout(makeAlienIsNotAlive, settings.alien.aliveAfterKilling, index)\r\n        soundPlayer.playAlienDead()\r\n    }\r\n}\r\n\r\nfunction makeAlienIsNotAlive(index)\r\n{\r\n    objs.aliens[index].isAlive = false\r\n}\r\n\r\nfunction checkCannonOnLine(ax, ay, bx ,by, indBullet)\r\n{\r\n    const vxFull = ax - bx\r\n    const vyFull = ay - by\r\n    const steps = Math.floor(Math.max(Math.abs(vxFull), Math.abs(vyFull)) / settings.cannon.collisionMaxStepPx)\r\n\r\n    // check for boxes between a and b\r\n    let xStep = 0\r\n    let yStep = 0\r\n    let stepCounter = 1 // not 0 because we don't need to check point b\r\n    let killed = false\r\n    let toPointA = false\r\n    let c = {\r\n        x: bx,\r\n        y: by,\r\n    }\r\n\r\n    if (steps !== 0)\r\n    {\r\n        xStep = vxFull / steps\r\n        yStep = vyFull / steps\r\n        c.x += xStep\r\n        c.y += yStep\r\n    }\r\n    else\r\n    {\r\n        stepCounter = steps + 1\r\n        toPointA = true\r\n        c.x = ax\r\n        c.y = ay\r\n    }\r\n\r\n    while ((stepCounter <= steps  || toPointA) && !killed)\r\n    {\r\n        let yDist = Math.abs((c.y - (objs.cannon.y + objs.cannon._sprite.h / 2)))\r\n\r\n        if(yDist <= settings.cannon.killDist / 2)\r\n        {\r\n            let xDist = Math.abs(c.x - (objs.cannon.x + objs.cannon._sprite.w / 2))\r\n            if(xDist <= settings.cannon.killDist / 2)\r\n            {\r\n                killCannon()\r\n                killed = true\r\n                // destroyBullet\r\n                objs.bullets.splice(indBullet,1);\r\n            }\r\n        }\r\n\r\n        // check is here bunker\r\n        for(let i = 0; i < objs.bunkers.length && !killed; i++)\r\n        {\r\n            if(objs.bunkers[i].hasPoint(Math.floor(c.x), Math.floor(c.y)))\r\n            {\r\n                objs.bullets.splice(indBullet,1)\r\n                killed = true\r\n            }\r\n        }\r\n\r\n        if(toPointA)\r\n        {\r\n            toPointA = false\r\n        }\r\n        else if (steps !== 0)\r\n        {\r\n            c.x += xStep\r\n            c.y += yStep\r\n            stepCounter += 1\r\n\r\n            if (stepCounter > steps)\r\n            {\r\n                toPointA = true\r\n                c.x = ax\r\n                c.y = ay\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction killCannon()\r\n{\r\n    gs.lives -= 1\r\n    if(gs.lives <= 0)\r\n    {\r\n        stopGame()\r\n        soundPlayer.playGameOver()\r\n    }\r\n    else\r\n    {\r\n        soundPlayer.playCannonDead()\r\n    }\r\n}\r\n\r\nfunction stopGame()\r\n{\r\n    objs.bullets.forEach(b => {\r\n        b.vx = 0;\r\n        b.vy = 0;\r\n    });\r\n\r\n    objs.aliens.forEach(a =>  {\r\n        a.vx = 0;\r\n        a.vy = 0;\r\n    });\r\n\r\n    objs.cannon.vx = 0;\r\n    objs.cannon.vy = 0;\r\n}\r\n\r\nfunction showSafeAreaZone(ctx) // debug\r\n{\r\n    ctx.beginPath();\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = \"red\"\r\n    ctx.strokeRect(safeArea.l, safeArea.t, safeArea.r, safeArea.b);\r\n    ctx.closePath();\r\n}\r\n\r\nfunction drawBackground(ctx, w, h)\r\n{\r\n    // border\r\n    ctx.beginPath();\r\n    let halfLineW = Math.floor(settings.lineW / 2)\r\n    ctx.lineWidth = settings.lineW;\r\n    ctx.strokeStyle = \"green\"\r\n    ctx.strokeRect(halfLineW, halfLineW, w - settings.lineW, h - settings.lineW);\r\n    ctx.strokeRect(halfLineW, settings.headerSize, w, h - settings.footerSize - settings.headerSize);\r\n    ctx.closePath();\r\n\r\n    safeArea.l = settings.lineW\r\n    safeArea.t = Math.floor(settings.lineW / 2) + settings.headerSize\r\n    safeArea.r = w - 2 * settings.lineW\r\n    safeArea.b = h - settings.footerSize - settings.headerSize - settings.lineW\r\n\r\n    // locate bunkers\r\n    for(let i = 1; i <= objs.bunkers.length; i++)\r\n    {\r\n        objs.bunkers[i - 1].x = i * Math.floor(safeArea.r / (settings.bunker.amount + 1))\r\n    }\r\n\r\n    //showSafeAreaZone(ctx) // debug\r\n\r\n    // text settings\r\n    ctx.font = \"30px Verdana\";\r\n    ctx.fillStyle = \"green\";\r\n    ctx.textAlign = \"center\";\r\n    ctx.lineWidth = 2;\r\n    ctx.textBaseline=\"middle\";\r\n\r\n    // header\r\n    ctx.fillText(\"LEVEL: \" + gs.level, Math.floor(w * 0.2), Math.floor((settings.headerSize + settings.lineW) / 2));\r\n    //ctx.fillText(\"TextC\", Math.floor(w * 0.5), Math.floor((settings.headerSize + settings.lineW) / 2));\r\n    ctx.fillText(\"SCORE: \" + gs.score, Math.floor(w * 0.8), Math.floor((settings.headerSize + settings.lineW) / 2));\r\n\r\n    // footer\r\n    let lives = \"\";\r\n    for (let i = 0; i < gs.lives; i++)\r\n        lives += \"❤ \"\r\n    ctx.textAlign = \"left\";\r\n    ctx.fillText(\"LIVES: \" + lives, Math.floor(w * 0.1), Math.floor(h - (settings.headerSize + settings.lineW) / 2));\r\n\r\n}\r\n\r\nfunction drawGameOver(ctx, w, h)\r\n{\r\n    const sqrWPart = Math.floor(w / 10)\r\n    const sqrHPart = Math.floor(h / 10)\r\n\r\n    ctx.clearRect(sqrWPart*3, sqrHPart*3, sqrWPart*4, sqrHPart*4);\r\n    ctx.beginPath();\r\n    ctx.lineWidth = settings.lineW;\r\n    ctx.strokeStyle = \"green\"\r\n    ctx.strokeRect(sqrWPart*3, sqrHPart*3, sqrWPart*4, sqrHPart*3);\r\n    ctx.closePath();\r\n\r\n    ctx.textBaseline=\"top\";\r\n    ctx.textAlign = \"center\";\r\n    ctx.fillText(\"GAME OVER\", w / 2, sqrHPart*3 + settings.lineW + 80);\r\n\r\n    ctx.font = \"15px Verdana\";\r\n    ctx.fillText(\"tap space to replay\", w / 2, sqrHPart*3 + settings.lineW + 80 * 2);\r\n}\r\n\r\nfunction drawNextLevel(ctx, w, h)\r\n{\r\n    const sqrWPart = Math.floor(w / 10)\r\n    const sqrHPart = Math.floor(h / 10)\r\n\r\n    ctx.clearRect(sqrWPart*3, sqrHPart*3, sqrWPart*4, sqrHPart*4);\r\n    ctx.beginPath();\r\n    ctx.lineWidth = settings.lineW;\r\n    ctx.strokeStyle = \"green\"\r\n    ctx.strokeRect(sqrWPart*3, sqrHPart*3, sqrWPart*4, sqrHPart*3);\r\n    ctx.closePath();\r\n\r\n    ctx.font = \"30px Verdana\";\r\n    ctx.textBaseline=\"top\";\r\n    ctx.textAlign = \"center\";\r\n    ctx.strokeStyle = \"white\"\r\n    ctx.fillText(\"NEXT LEVEL\", w / 2, sqrHPart*3 + settings.lineW + 80);\r\n\r\n    ctx.font = \"15px Verdana\";\r\n    ctx.fillText(\"you are not bad\", w / 2, sqrHPart*3 + settings.lineW + 80 * 2);\r\n}\r\n\r\nfunction drawStartGame(ctx, w, h)\r\n{\r\n    const sqrWPart = Math.floor(w / 10)\r\n    const sqrHPart = Math.floor(h / 10)\r\n\r\n    ctx.clearRect(sqrWPart*2, sqrHPart*3, sqrWPart*6, sqrHPart*4);\r\n    ctx.beginPath();\r\n    ctx.lineWidth = settings.lineW;\r\n    ctx.strokeStyle = \"green\"\r\n    ctx.strokeRect(sqrWPart*2, sqrHPart*3, sqrWPart*6, sqrHPart*3);\r\n    ctx.closePath();\r\n\r\n    ctx.font = \"30px Verdana\";\r\n    ctx.textBaseline=\"top\";\r\n    ctx.textAlign = \"center\";\r\n    ctx.strokeStyle = \"white\"\r\n    ctx.fillText(\"SPACE INVADERS\", w / 2, sqrHPart*3 + settings.lineW + 80);\r\n\r\n    ctx.font = \"15px Verdana\";\r\n    ctx.fillText(\"tap space to play\", w / 2, sqrHPart*3 + settings.lineW + 80 * 2);\r\n}\r\n\r\nexport function draw(canvas, time) {\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    drawBackground(ctx, canvas.width, canvas.height);\r\n    if(gs.started)\r\n    {\r\n        objs.aliens.forEach(a => a.draw(ctx, time));\r\n        objs.cannon.draw(ctx);\r\n        objs.bullets.forEach(b => b.draw(ctx));\r\n        objs.bunkers.forEach(b => b.draw(ctx));\r\n        if(gs.lives <= 0)\r\n        {\r\n            drawGameOver(ctx, canvas.width, canvas.height)\r\n        }\r\n        if(gs.goToNextLevel)\r\n        {\r\n            drawNextLevel(ctx, canvas.width, canvas.height)\r\n        }\r\n    }\r\n    else\r\n    {\r\n        drawStartGame(ctx, canvas.width, canvas.height)\r\n    }\r\n}\r\n\r\nfunction aliensStartShoot()\r\n{\r\n    let maxI = settings.alien.alienTypes.length;\r\n    let maxJ = settings.alien.inOneLine;\r\n    for(let j = 0; j < maxJ; j++)\r\n    {\r\n        for(let i = maxI - 1; i >= 0; i--)\r\n        {\r\n            if (objs.aliens[maxJ * i + j].isAlive)\r\n            {\r\n                 if(Math.random() < settings.alien.shootProbability)\r\n                 {\r\n                     let timeout = Math.floor(Math.random() * settings.alien.shootTime * 1000)\r\n                     setTimeout(alienMakeShoot, timeout, maxJ * i + j);\r\n                     if(!objs.aliens[maxJ * i + j].isInjured)\r\n                     {\r\n                         for (let k = 1; k <= objs.aliens[maxJ * i + j].alienType; k++)\r\n                         {\r\n                             setTimeout(alienMakeShoot, timeout + k * settings.alien.shootInterval, maxJ * i + j);\r\n                         }\r\n                     }\r\n                 }\r\n                i = -1;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction alienMakeShoot(ind)\r\n{\r\n    if(objs.aliens[ind].y < objs.cannon.y)\r\n    {\r\n        const bulletX = objs.aliens[ind].x + settings.alien.size / 2;\r\n        const bulletY = objs.aliens[ind].y + settings.alien.size / 2;\r\n        const bulletVx = ((objs.cannon.x + objs.cannon._sprite.w / 2) - bulletX) / settings.alien.BulletMult\r\n        const bulletVy = ((objs.cannon.y + objs.cannon._sprite.h / 2) - bulletY) / settings.alien.BulletMult\r\n\r\n        objs.bullets.push(new Bullet(bulletX, bulletY, bulletVx, bulletVy, 4, 8, \"white\"));\r\n    }\r\n}\r\n","import {\r\n  preload,\r\n  init,\r\n  update,\r\n  draw\r\n} from './game'\r\n\r\nconst canvas = document.getElementById(\"cnvs\");\r\ncanvas.width = 600;\r\ncanvas.height = window.innerHeight;\r\n\r\nconst tickLength = 15; //ms\r\nlet lastTick;\r\nlet lastRender;\r\nlet stopCycle;\r\n\r\nfunction run(tFrame)\r\n{\r\n    stopCycle = window.requestAnimationFrame(run);\r\n\r\n    const nextTick = lastTick + tickLength;\r\n    let numTicks = 0;\r\n\r\n    if (tFrame > nextTick) {\r\n        const timeSinceTick = tFrame - lastTick;\r\n        numTicks = Math.floor(timeSinceTick / tickLength);\r\n    }\r\n\r\n    for (let i = 0; i < numTicks; i++) {\r\n        lastTick = lastTick + tickLength;\r\n        update(lastTick);\r\n    }\r\n\r\n    draw(canvas, tFrame);\r\n    lastRender = tFrame;\r\n}\r\n\r\nfunction stopGame() {\r\n    window.cancelAnimationFrame(stopCycle);\r\n}\r\n\r\nfunction onPreloadComplete() {\r\n  lastTick = performance.now();\r\n  lastRender = lastTick;\r\n  stopCycle = null;\r\n  init(canvas);\r\n  run();\r\n}\r\n\r\npreload(onPreloadComplete);\r\n"]}